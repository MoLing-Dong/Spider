import random

CHINA_REGIONS = {
    "北京市": {
        "北京市": ["东城区", "西城区", "朝阳区", "海淀区", "丰台区", "石景山区", "门头沟区", "房山区", "通州区",
                   "顺义区", "昌平区", "大兴区", "怀柔区", "平谷区", "密云区", "延庆区"]
    },
    "上海市": {
        "上海市": ["黄浦区", "徐汇区", "长宁区", "静安区", "普陀区", "虹口区", "杨浦区", "浦东新区", "闵行区", "宝山区",
                   "嘉定区", "金山区", "松江区", "青浦区", "奉贤区", "崇明区"]
    },
    "天津市": {
        "天津市": ["和平区", "河东区", "河西区", "南开区", "河北区", "红桥区", "东丽区", "西青区", "津南区", "北辰区",
                   "武清区", "宝坻区", "滨海新区", "宁河区", "静海区", "蓟州区"]
    },
    "重庆市": {
        "重庆市": ["渝中区", "万州区", "涪陵区", "大渡口区", "江北区", "沙坪坝区", "九龙坡区", "南岸区", "北碚区",
                   "綦江区", "大足区", "渝北区", "巴南区", "黔江区", "长寿区", "江津区", "合川区", "永川区", "南川区",
                   "璧山区", "铜梁区", "潼南区", "荣昌区", "开州区", "梁平区", "武隆区", "城口县", "丰都县", "垫江县",
                   "忠县", "云阳县", "奉节县", "巫山县", "巫溪县", "石柱土家族自治县", "秀山土家族苗族自治县",
                   "酉阳土家族苗族自治县", "彭水苗族土家族自治县"]
    },
    "广东省": {
        "广州市": ["越秀区", "海珠区", "荔湾区", "天河区", "白云区", "黄埔区", "番禺区", "花都区", "南沙区", "从化区",
                   "增城区"],
        "深圳市": ["福田区", "罗湖区", "南山区", "宝安区", "龙岗区", "盐田区", "龙华区", "坪山区", "光明区"],
        "东莞市": ["莞城街道", "东城街道", "南城街道", "万江街道", "石碣镇", "石龙镇", "茶山镇", "石排镇", "企石镇",
                   "横沥镇", "桥头镇", "谢岗镇", "东坑镇", "常平镇", "寮步镇", "大朗镇", "麻涌镇", "中堂镇", "高埗镇",
                   "樟木头镇", "大岭山镇", "望牛墩镇", "黄江镇", "洪梅镇", "清溪镇", "沙田镇", "道滘镇", "塘厦镇",
                   "虎门镇", "厚街镇", "凤岗镇", "长安镇"],
        "佛山市": ["禅城区", "南海区", "顺德区", "高明区", "三水区"],
        "珠海市": ["香洲区", "斗门区", "金湾区"],
        "汕头市": ["龙湖区", "金平区", "濠江区", "潮阳区", "潮南区", "澄海区", "南澳县"],
        "中山市": ["石岐街道", "东区街道", "西区街道", "南区街道", "五桂山街道", "火炬开发区", "黄圃镇", "南头镇",
                   "东凤镇", "阜沙镇", "小榄镇", "东升镇", "古镇镇", "横栏镇", "三角镇", "民众镇", "南朗镇", "港口镇",
                   "大涌镇", "沙溪镇", "三乡镇", "板芙镇", "神湾镇", "坦洲镇"]
    },
    "江苏省": {
        "南京市": ["玄武区", "秦淮区", "建邺区", "鼓楼区", "浦口区", "栖霞区", "雨花台区", "江宁区", "六合区", "溧水区",
                   "高淳区"],
        "苏州市": ["姑苏区", "虎丘区", "吴中区", "相城区", "吴江区", "常熟市", "张家港市", "昆山市", "太仓市"],
        "无锡市": ["梁溪区", "新吴区", "锡山区", "惠山区", "滨湖区", "江阴市", "宜兴市"],
        "常州市": ["天宁区", "钟楼区", "新北区", "武进区", "金坛区", "溧阳市"],
        "扬州市": ["广陵区", "邗江区", "江都区", "宝应县", "仪征市", "高邮市"]
    },
    "浙江省": {
        "杭州市": ["上城区", "拱墅区", "西湖区", "滨江区", "萧山区", "余杭区", "富阳区", "临安区", "桐庐县", "淳安县",
                   "建德市"],
        "宁波市": ["海曙区", "江北区", "北仑区", "镇海区", "鄞州区", "奉化区", "余姚市", "慈溪市", "象山县", "宁海县"],
        "温州市": ["鹿城区", "龙湾区", "瓯海区", "洞头区", "永嘉县", "平阳县", "苍南县", "文成县", "泰顺县", "瑞安市",
                   "乐清市"],
        "嘉兴市": ["南湖区", "秀洲区", "嘉善县", "海盐县", "海宁市", "平湖市", "桐乡市"],
        "绍兴市": ["越城区", "柯桥区", "上虞区", "新昌县", "诸暨市", "嵊州市"]
    },
    "四川省": {
        "成都市": ["锦江区", "青羊区", "金牛区", "武侯区", "成华区", "龙泉驿区", "新都区", "温江区", "双流区", "郫都区",
                   "金堂县", "大邑县", "蒲江县", "新津区", "都江堰市", "彭州市", "邛崃市", "崇州市", "简阳市"],
        "绵阳市": ["涪城区", "游仙区", "安州区", "三台县", "盐亭县", "梓潼县", "北川羌族自治县", "平武县", "江油市"],
        "自贡市": ["自流井区", "贡井区", "大安区", "沿滩区", "荣县", "富顺县"],
        "泸州市": ["江阳区", "纳溪区", "龙马潭区", "泸县", "合江县", "叙永县", "古蔺县"]
    },
    "湖北省": {
        "武汉市": ["江岸区", "江汉区", "硚口区", "汉阳区", "武昌区", "青山区", "洪山区", "东西湖区", "汉南区", "蔡甸区",
                   "江夏区", "黄陂区", "新洲区"],
        "宜昌市": ["西陵区", "伍家岗区", "点军区", "猇亭区", "夷陵区", "远安县", "兴山县", "秭归县", "长阳土家族自治县",
                   "五峰土家族自治县", "宜都市", "当阳市", "枝江市"],
        "襄阳市": ["襄城区", "樊城区", "襄州区", "南漳县", "谷城县", "保康县", "老河口市", "枣阳市", "宜城市"],
        "荆州市": ["沙市区", "荆州区", "公安县", "监利县", "江陵县", "石首市", "洪湖市", "松滋市"]
    },
    "河南省": {
        "郑州市": ["中原区", "二七区", "管城回族区", "金水区", "上街区", "惠济区", "中牟县", "巩义市", "荥阳市",
                   "新密市", "新郑市", "登封市"],
        "洛阳市": ["老城区", "西工区", "瀍河回族区", "涧西区", "偃师区", "孟津区", "洛龙区", "新安县", "栾川县", "嵩县",
                   "汝阳县", "宜阳县", "洛宁县", "伊川县"]
    },
    "山东省": {
        "济南市": ["历下区", "市中区", "槐荫区", "天桥区", "历城区", "长清区", "章丘区", "济阳区", "莱芜区", "钢城区",
                   "平阴县", "商河县"],
        "青岛市": ["市南区", "市北区", "黄岛区", "崂山区", "李沧区", "城阳区", "即墨区", "胶州市", "平度市", "莱西市"],
        "烟台市": ["芝罘区", "福山区", "牟平区", "莱山区", "蓬莱区", "龙口市", "莱阳市", "莱州市", "招远市", "栖霞市",
                   "海阳市"]
    },
    "河北省": {
        "石家庄市": ["长安区", "桥西区", "新华区", "井陉矿区", "裕华区", "藁城区", "鹿泉区", "栾城区", "井陉县",
                     "正定县", "行唐县", "灵寿县", "高邑县", "深泽县", "赞皇县", "无极县", "平山县", "元氏县", "赵县",
                     "晋州市", "新乐市"],
        "唐山市": ["路南区", "路北区", "古冶区", "开平区", "丰南区", "丰润区", "曹妃甸区", "滦州市", "滦南县", "乐亭县",
                   "迁西县", "玉田县", "遵化市", "迁安市"]
    },
    "陕西省": {
        "西安市": ["新城区", "碑林区", "莲湖区", "灞桥区", "未央区", "雁塔区", "阎良区", "临潼区", "长安区", "高陵区",
                   "鄠邑区", "蓝田县", "周至县"],
        "宝鸡市": ["渭滨区", "金台区", "陈仓区", "凤翔区", "岐山县", "扶风县", "眉县", "陇县", "千阳县", "麟游县",
                   "凤县", "太白县"]
    },
    "福建省": {
        "福州市": ["鼓楼区", "台江区", "仓山区", "马尾区", "晋安区", "长乐区", "闽侯县", "连江县", "罗源县", "闽清县",
                   "永泰县", "平潭县", "福清市"],
        "厦门市": ["思明区", "海沧区", "湖里区", "集美区", "同安区", "翔安区"]
    },
    "辽宁省": {
        "沈阳市": ["和平区", "沈河区", "大东区", "皇姑区", "铁西区", "苏家屯区", "浑南区", "沈北新区", "于洪区",
                   "辽中区", "康平县", "法库县", "新民市"],
        "大连市": ["中山区", "西岗区", "沙河口区", "甘井子区", "旅顺口区", "金州区", "普兰店区", "瓦房店市", "庄河市"]
    },
    "黑龙江省": {
        "哈尔滨市": ["道里区", "南岗区", "道外区", "平房区", "松北区", "香坊区", "呼兰区", "阿城区", "双城区", "依兰县",
                     "方正县", "宾县", "巴彦县", "木兰县", "通河县", "延寿县", "尚志市", "五常市"],
        "齐齐哈尔市": ["龙沙区", "建华区", "铁锋区", "昂昂溪区", "富拉尔基区", "碾子山区", "梅里斯达斡尔族区", "龙江县",
                       "依安县", "泰来县", "甘南县", "富裕县", "克山县", "克东县", "拜泉县", "讷河市"]
    },
    "安徽省": {
        "合肥市": ["瑶海区", "庐阳区", "蜀山区", "包河区", "长丰县", "肥东县", "肥西县", "庐江县", "巢湖市"],
        "芜湖市": ["镜湖区", "弋江区", "鸠江区", "三山区", "芜湖县", "繁昌区", "南陵县", "无为市"]
    },
    "湖南省": {
        "长沙市": ["芙蓉区", "天心区", "岳麓区", "开福区", "雨花区", "望城区", "长沙县", "浏阳市", "宁乡市"],
        "株洲市": ["荷塘区", "芦淞区", "石峰区", "天元区", "渌口区", "攸县", "茶陵县", "炎陵县", "醴陵市"]
    }
}

CITY_POSTCODE_PREFIX = {
    "北京市": {
        "北京市": "100"
    },
    "上海市": {
        "上海市": "200"
    },
    "天津市": {
        "天津市": "300"
    },
    "重庆市": {
        "重庆市": "400"
    },
    "广东省": {
        "广州市": "510",
        "深圳市": "518",
        "东莞市": "523",
        "佛山市": "528",
        "珠海市": "519",
        "汕头市": "515",
        "中山市": "528"
    },
    "江苏省": {
        "南京市": "210",
        "苏州市": "215",
        "无锡市": "214",
        "常州市": "213",
        "扬州市": "225"
    },
    "浙江省": {
        "杭州市": "310",
        "宁波市": "315",
        "温州市": "325",
        "嘉兴市": "314",
        "绍兴市": "312"
    },
    "四川省": {
        "成都市": "610",
        "绵阳市": "621",
        "自贡市": "643",
        "泸州市": "646"
    },
    "湖北省": {
        "武汉市": "430",
        "宜昌市": "443",
        "襄阳市": "441",
        "荆州市": "434"
    },
    "河南省": {
        "郑州市": "450",
        "洛阳市": "471"
    },
    "山东省": {
        "济南市": "250",
        "青岛市": "266",
        "烟台市": "264"
    },
    "河北省": {
        "石家庄市": "050",
        "唐山市": "063"
    },
    "陕西省": {
        "西安市": "710",
        "宝鸡市": "721"
    },
    "福建省": {
        "福州市": "350",
        "厦门市": "361"
    },
    "辽宁省": {
        "沈阳市": "110",
        "大连市": "116"
    },
    "黑龙江省": {
        "哈尔滨市": "150",
        "齐齐哈尔市": "161"
    },
    "安徽省": {
        "合肥市": "230",
        "芜湖市": "241"
    },
    "湖南省": {
        "长沙市": "410",
        "株洲市": "412"
    }
}
# 中国常见街道名称
STREET_NAMES = [
    "人民路", "中山路", "解放路", "建设路", "和平路", "民族路", "友谊路", "新华路", "长江路", "东风路",
    "胜利路", "光明路", "青年路", "文化路", "兴业路", "团结路", "复兴路", "南京路", "北京路", "广州路",
    "上海路", "杭州路", "重庆路", "西安路", "长安街", "天安门", "长城路", "黄河路", "珠江路", "松江路",
    "金沙江路", "嘉陵江路", "延安路", "朝阳路", "向阳路", "阳光路", "幸福路", "繁华路", "富强路", "和谐路"
]

# 楼宇/小区名称后缀
BUILDING_SUFFIX = [
    "大厦", "公寓", "花园", "小区", "广场", "大楼", "家园", "雅苑", "华庭", "豪庭",
    "公馆", "御园", "名邸", "景苑", "水岸", "星城", "庄园", "名苑", "名园", "新村"
]

# 楼宇/小区名称前缀
BUILDING_PREFIX = [
    "金色", "银座", "阳光", "御景", "国际", "富丽", "豪景", "锦绣", "碧水", "翠竹",
    "世纪", "绿城", "和谐", "金都", "未来", "天成", "丽景", "江南", "中央", "万达",
    "恒大", "保利", "万科", "宝龙", "华润", "龙湖", "绿地", "中海", "富力", "碧桂园"
]


def generate_building_name():
    """生成随机的楼宇/小区名称"""
    prefix = random.choice(BUILDING_PREFIX)
    suffix = random.choice(BUILDING_SUFFIX)
    return f"{prefix}{suffix}"


def generate_street_address():
    """生成随机的街道地址"""
    street = random.choice(STREET_NAMES)
    number = random.randint(1, 999)
    return f"{street}{number}号"


def generate_detail_address():
    """生成随机的详细地址（楼栋门牌号）"""
    building = random.randint(1, 50)
    unit = random.randint(1, 9)
    room = random.randint(101, 2599)

    # 50%概率使用单元户格式，50%概率使用简单门牌号
    if random.random() < 0.5:
        return f"{building}栋{unit}单元{room}室"
    else:
        return f"{room}室"


def generate_postcode(province, city):
    """根据省份和城市生成对应的邮编"""
    if province in CITY_POSTCODE_PREFIX and city in CITY_POSTCODE_PREFIX[province]:
        prefix = CITY_POSTCODE_PREFIX[province][city]
        # 生成剩余3位随机数字
        suffix = ''.join([str(random.randint(0, 9)) for _ in range(6 - len(prefix))])
        return prefix + suffix

    # 如果找不到特定城市的邮编前缀，使用默认值
    return "100" + ''.join([str(random.randint(0, 9)) for _ in range(3)])


def generate_chinese_address(num_addresses=1):
    addresses = []

    for _ in range(num_addresses):
        province = random.choice(list(CHINA_REGIONS.keys()))

        city = random.choice(list(CHINA_REGIONS[province].keys()))

        district = random.choice(CHINA_REGIONS[province][city])

        street_address = generate_street_address()

        building_name = generate_building_name()

        detail_address = generate_detail_address()

        postcode = generate_postcode(province, city)

        full_address = f"{province}{city}{district}{street_address}{building_name}{detail_address}"

        addresses.append({
            "province": province,
            "city": city,
            "district": district,
            "street": street_address,
            "building": building_name,
            "detail": detail_address,
            "address": full_address,
            "postcode": postcode,
            "full_address_with_postcode": f"{full_address} {postcode}"
        })

    return addresses


# 示例用法
if __name__ == "__main__":
    chinese_addresses = generate_chinese_address(5)

    for i, addr in enumerate(chinese_addresses, 1):
        print(f"地址 {i}:")
        print(f"省份: {addr['province']}")
        print(f"城市: {addr['city']}")
        print(f"区/县: {addr['district']}")
        print(f"街道: {addr['street']}")
        print(f"小区/楼宇: {addr['building']}")
        print(f"门牌号: {addr['detail']}")
        print(f"完整地址: {addr['address']}")
        print(f"邮编: {addr['postcode']}")
        print(f"带邮编完整地址: {addr['full_address_with_postcode']}")
        print("-" * 50)
